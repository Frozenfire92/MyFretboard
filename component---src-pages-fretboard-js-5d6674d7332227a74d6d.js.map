{"version":3,"sources":["webpack:///./src/pages/fretboard.js","webpack:///./src/components/input/Select.js"],"names":["FretboardPage","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_App__WEBPACK_IMPORTED_MODULE_2__","path","this","props","_ref","settings","data","updateChord","state","Fragment","_components_input_Select__WEBPACK_IMPORTED_MODULE_4__","label","value","currentChord","id","options","chordOptions","onChange","_components_FretBoard__WEBPACK_IMPORTED_MODULE_3__","chord","hand","stringColor","fretColor","fingerColor","fingerBorderColor","fingerTextColor","fretMarkerColor","fretMarkerBorderColor","fretMarkerOpacity","showFingerNumberLabel","showFretMarkers","Component","Select","handleChange","event","target","_this","e","map","n","key","propTypes","PropTypes","string","arrayOf","shape","func"],"mappings":"sMAKqBA,4FACnBC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKC,KAAMC,KAAKC,MAAM,MACpBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,SAAAI,GAA4C,IAAzCC,EAAyCD,EAAzCC,SAAUC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,YAAaC,EAAYJ,EAAZI,MAC/B,OACEX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACEZ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,MAAM,QACNC,MAAOJ,EAAMK,aAAaC,GAC1BC,QAAST,EAAKU,aACdC,SAAU,SAACL,GAAYL,EAAYK,MAErCf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,MAAOX,EAAMK,aACbO,KAAMf,EAASe,KACfC,YAAahB,EAASgB,YACtBC,UAAWjB,EAASiB,UACpBC,YAAalB,EAASkB,YACtBC,kBAAmBnB,EAASmB,kBAC5BC,gBAAiBpB,EAASoB,gBAC1BC,gBAAiBrB,EAASqB,gBAC1BC,sBAAuBtB,EAASsB,sBAChCC,kBAAmBvB,EAASuB,kBAC5BC,sBAAuBxB,EAASwB,sBAChCC,gBAAiBzB,EAASyB,0BA3BDC,mGCFrCC,oGAQJC,aAAA,SAAaC,GACPhC,KAAKC,MAAMc,UAAUf,KAAKC,MAAMc,SAASiB,EAAMC,OAAOvB,UAG5DhB,OAAA,WAAS,IAAAwC,EAAAlC,KACP,OACEL,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAQa,MAAOV,KAAKC,MAAMS,MAAOK,SAAU,SAACoB,GAAOD,EAAKH,aAAaI,KAClEnC,KAAKC,MAAMY,QAAQuB,IAAI,SAACC,GAAD,OAAQ1C,EAAAC,EAAAC,cAAA,UAAQyC,IAAKD,EAAE3B,MAAOA,MAAO2B,EAAE3B,OAAQ2B,EAAE5B,UAF7E,IAIST,KAAKC,MAAMQ,WAlBLoB,aAAfC,EACGS,UAAY,CACjB7B,MAAO8B,IAAUC,OACjBhC,MAAO+B,IAAUC,OACjB5B,QAAS2B,IAAUE,QAAQF,IAAUG,MAAM,CAAElC,MAAO+B,IAAUC,OAAQ/B,MAAO8B,IAAUC,UACvF1B,SAAUyB,IAAUI,MAmBTd","file":"component---src-pages-fretboard-js-5d6674d7332227a74d6d.js","sourcesContent":["import React, { Component } from 'react';\nimport App, { Consumer } from '../components/App';\nimport FretBoard from '../components/FretBoard';\nimport Select from '../components/input/Select';\n\nexport default class FretboardPage extends Component {\n  render() {\n    return (\n      <App path={this.props[\"*\"]}>\n        <Consumer>\n          {({ settings, data, updateChord, state }) => {\n            return (\n              <>\n                <h2>Fretboard</h2>\n                <Select\n                  label=\"Chord\"\n                  value={state.currentChord.id}\n                  options={data.chordOptions}\n                  onChange={(value) => { updateChord(value); }}\n                />\n                <FretBoard\n                  chord={state.currentChord}\n                  hand={settings.hand}\n                  stringColor={settings.stringColor}\n                  fretColor={settings.fretColor}\n                  fingerColor={settings.fingerColor}\n                  fingerBorderColor={settings.fingerBorderColor}\n                  fingerTextColor={settings.fingerTextColor}\n                  fretMarkerColor={settings.fretMarkerColor}\n                  fretMarkerBorderColor={settings.fretMarkerBorderColor}\n                  fretMarkerOpacity={settings.fretMarkerOpacity}\n                  showFingerNumberLabel={settings.showFingerNumberLabel}\n                  showFretMarkers={settings.showFretMarkers}\n                />\n              </>\n            )\n          }}\n        </Consumer>\n      </App>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  static propTypes = {\n    value: PropTypes.string,\n    label: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({ label: PropTypes.string, value: PropTypes.string })),\n    onChange: PropTypes.func\n  }\n\n  handleChange(event) {\n    if (this.props.onChange) this.props.onChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <label>\n        <select value={this.props.value} onChange={(e) => {this.handleChange(e);}} >\n          {this.props.options.map((n) => (<option key={n.value} value={n.value}>{n.label}</option>))}\n        </select>\n        &nbsp;{this.props.label}\n      </label>\n    );\n  }\n}\n\nexport default Select;\n"],"sourceRoot":""}